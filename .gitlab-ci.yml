image: "ubuntu:latest"

stages:
  - fetch
  - build
  - package
  - release

fetch-e2fsprogs:
  image: "ubuntu:focal"
  stage: fetch
  when: manual
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt update && apt -y upgrade
    - apt install -y wget
    - echo JOB_ID_FETCH_E2FSPROGS=$CI_JOB_ID > build.env
  script:
    - |
      mkdir -p bin
      wget -O ./bin/fuse2fs   "https://github.com/ruanformigoni/e2fsprogs/releases/download/e58f946/fuse2fs"
      wget -O ./bin/mke2fs    "https://github.com/ruanformigoni/e2fsprogs/releases/download/e58f946/mke2fs"
      wget -O ./bin/e2fsck    "https://github.com/ruanformigoni/e2fsprogs/releases/download/e58f946/e2fsck"
      wget -O ./bin/resize2fs "https://github.com/ruanformigoni/e2fsprogs/releases/download/e58f946/resize2fs"
  artifacts:
    paths:
      - ./bin
    reports:
      dotenv: build.env

fetch-proot:
  image: "ubuntu:focal"
  stage: fetch
  when: manual
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt update && apt -y upgrade
    - apt install -y wget
    - echo JOB_ID_FETCH_PROOT=$CI_JOB_ID > build.env
  script:
    - |
      mkdir -p ./bin
      wget -O ./bin/proot "https://github.com/ruanformigoni/proot/releases/download/5a4be11/proot"
  artifacts:
    paths:
      - ./bin
    reports:
      dotenv: build.env

fetch-bwrap:
  image: "ubuntu:focal"
  stage: fetch
  when: manual
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt update && apt -y upgrade
    - apt install -y wget
    - echo JOB_ID_FETCH_BWRAP=$CI_JOB_ID > build.env
  script:
    - |
      mkdir -p ./bin
      wget -O ./bin/bwrap "https://github.com/ruanformigoni/bubblewrap-musl-static/releases/download/559a725/bwrap"
  artifacts:
    paths:
      - ./bin
    reports:
      dotenv: build.env

fetch-dwarfs:
  image: "ubuntu:jammy"
  stage: fetch
  when: manual
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt update && apt -y upgrade
    - apt install -y wget xz-utils tar
    - echo JOB_ID_BUILD_DWARFS=$CI_JOB_ID > build.env
  script:
    - |
      mkdir -p ./dwarfs
      wget -Odwarfs.tar.xz https://github.com/mhx/dwarfs/releases/download/v0.6.2/dwarfs-0.6.2-Linux.tar.xz
      tar xf dwarfs.tar.xz --strip-components=1 -Cdwarfs
      mkdir -p ./bin
      mv ./dwarfs/bin/mkdwarfs      ./bin
      mv ./dwarfs/bin/dwarfsextract ./bin
      mv ./dwarfs/sbin/dwarfs2      ./bin/dwarfs
  artifacts:
    paths:
      - ./bin
    reports:
      dotenv: build.env


build-elf:
  image: docker:latest
  stage: build
  when: manual
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: alpine:arts

  before_script:
    - echo GE_JOB_ID=$CI_JOB_ID >> build.env

  script:
    - mkdir -p bin
    - docker build . -t $CI_REGISTRY/$IMAGE_NAME -f docker/Dockerfile.elf
    - docker run --rm -v $(pwd):/workdir $CI_REGISTRY/$IMAGE_NAME cp /arts/dist/main /workdir/bin/elf

  artifacts:
    paths:
      - ./bin/elf
    reports:
      dotenv: build.env

package-focal:
  stage: package
  before_script:
    - apt update && apt -y upgrade
    - apt install -y git wget curl zstd debootstrap e2fsprogs proot fuse2fs xz-utils rsync
    - echo JOB_ID_BUILD_BS_FOCAL=$CI_JOB_ID > build.env
  script:
    # Set dist
    - dist="focal"
    # Build
    - ./src/scripts/_build.sh debootstrap "$dist"
    # Set env vars
    - echo "FOCAL_TARBALL=${dist}.tar.xz" >> build.env
  needs:
    - job: build-elf
      artifacts: true
    - job: fetch-e2fsprogs
      artifacts: true
    - job: fetch-bwrap
      artifacts: true
    - job: fetch-dwarfs
      artifacts: true
    - job: fetch-proot
      artifacts: true
  artifacts:
    paths:
      - ./dist
    reports:
      dotenv: build.env

package-arch:
  image: "archlinux:latest"
  stage: package
  before_script:
    - pacman -Syu --noconfirm
    - pacman -S python-pip patchelf git gawk wget curl zstd xz rsync binutils --noconfirm
    - echo JOB_ID_BUILD_BS_ARCH=$CI_JOB_ID > build.env
  script:
    # Build
    - ./src/scripts/_build.sh archbootstrap
    # Set env vars
    - echo "ARCH_TARBALL=arch.tar.xz" >> build.env
  needs:
    - job: build-elf
      artifacts: true
    - job: fetch-e2fsprogs
      artifacts: true
    - job: fetch-bwrap
      artifacts: true
    - job: fetch-dwarfs
      artifacts: true
    - job: fetch-proot
      artifacts: true
  artifacts:
    paths:
      - ./dist
    reports:
      dotenv: build.env

package-alpine:
  image: "archlinux:latest"
  stage: package
  before_script:
    - pacman -Syu --noconfirm
    - pacman -S python-pip patchelf git gawk wget curl zstd xz rsync binutils --noconfirm
    - echo JOB_ID_BUILD_BS_ALPINE=$CI_JOB_ID > build.env
  script:
    # Build
    - ./src/scripts/_build.sh alpinebootstrap
    # Set env vars
    - echo "ALPINE_TARBALL=alpine.tar.xz" >> build.env
  needs:
    - job: build-elf
      artifacts: true
    - job: fetch-e2fsprogs
      artifacts: true
    - job: fetch-bwrap
      artifacts: true
    - job: fetch-dwarfs
      artifacts: true
    - job: fetch-proot
      artifacts: true
  artifacts:
    paths:
      - ./dist
    reports:
      dotenv: build.env

deploy:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - apk --no-cache add curl
  script:
    - |
      echo "RELEASE_DATE=$(date +'%Y-%m-%d')" >> build.env
      # Delete current release
      curl --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" --request DELETE "https://gitlab.com/api/v4/projects/43000137/releases/Continuous" || true
  # Set new release
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: 'Continuous'
    description: 'Release $CI_COMMIT_SHORT_SHA : ${RELEASE_DATE}'
    assets:
      links:
        - name: 'focal.tar.xz'
          url: 'https://gitlab.com/formigoni/arts/-/jobs/${JOB_ID_BUILD_BS_FOCAL}/artifacts/raw/dist/${FOCAL_TARBALL}'
        - name: 'arch.tar.xz'
          url: 'https://gitlab.com/formigoni/arts/-/jobs/${JOB_ID_BUILD_BS_ARCH}/artifacts/raw/dist/${ARCH_TARBALL}'
        - name: 'alpine.tar.xz'
          url: 'https://gitlab.com/formigoni/arts/-/jobs/${JOB_ID_BUILD_BS_ALPINE}/artifacts/raw/dist/${ALPINE_TARBALL}'
  needs:
    - job: package-arch
    - job: package-focal
    - job: package-alpine
      artifacts: true
